|top
LED[0] <= counter_mux:inst1.result[0]
LED[1] <= counter_mux:inst1.result[1]
LED[2] <= counter_mux:inst1.result[2]
LED[3] <= counter_mux:inst1.result[3]
LED[4] <= counter_mux:inst1.result[4]
LED[5] <= counter_mux:inst1.result[5]
LED[6] <= counter_mux:inst1.result[6]
LED[7] <= counter_mux:inst1.result[7]
USR_BTN => counter_mux:inst1.sel
CLK12M => PLL:inst.inclk0


|top|counter_mux:inst1
data0x[0] => sub_wire1[0].IN1
data0x[1] => sub_wire1[1].IN1
data0x[2] => sub_wire1[2].IN1
data0x[3] => sub_wire1[3].IN1
data0x[4] => sub_wire1[4].IN1
data0x[5] => sub_wire1[5].IN1
data0x[6] => sub_wire1[6].IN1
data0x[7] => sub_wire1[7].IN1
data1x[0] => sub_wire1[8].IN1
data1x[1] => sub_wire1[9].IN1
data1x[2] => sub_wire1[10].IN1
data1x[3] => sub_wire1[11].IN1
data1x[4] => sub_wire1[12].IN1
data1x[5] => sub_wire1[13].IN1
data1x[6] => sub_wire1[14].IN1
data1x[7] => sub_wire1[15].IN1
sel => sub_wire4.IN1
result[0] <= lpm_mux:LPM_MUX_component.result
result[1] <= lpm_mux:LPM_MUX_component.result
result[2] <= lpm_mux:LPM_MUX_component.result
result[3] <= lpm_mux:LPM_MUX_component.result
result[4] <= lpm_mux:LPM_MUX_component.result
result[5] <= lpm_mux:LPM_MUX_component.result
result[6] <= lpm_mux:LPM_MUX_component.result
result[7] <= lpm_mux:LPM_MUX_component.result


|top|counter_mux:inst1|lpm_mux:LPM_MUX_component
data[0][0] => mux_46c:auto_generated.data[0]
data[0][1] => mux_46c:auto_generated.data[1]
data[0][2] => mux_46c:auto_generated.data[2]
data[0][3] => mux_46c:auto_generated.data[3]
data[0][4] => mux_46c:auto_generated.data[4]
data[0][5] => mux_46c:auto_generated.data[5]
data[0][6] => mux_46c:auto_generated.data[6]
data[0][7] => mux_46c:auto_generated.data[7]
data[1][0] => mux_46c:auto_generated.data[8]
data[1][1] => mux_46c:auto_generated.data[9]
data[1][2] => mux_46c:auto_generated.data[10]
data[1][3] => mux_46c:auto_generated.data[11]
data[1][4] => mux_46c:auto_generated.data[12]
data[1][5] => mux_46c:auto_generated.data[13]
data[1][6] => mux_46c:auto_generated.data[14]
data[1][7] => mux_46c:auto_generated.data[15]
sel[0] => mux_46c:auto_generated.sel[0]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_46c:auto_generated.result[0]
result[1] <= mux_46c:auto_generated.result[1]
result[2] <= mux_46c:auto_generated.result[2]
result[3] <= mux_46c:auto_generated.result[3]
result[4] <= mux_46c:auto_generated.result[4]
result[5] <= mux_46c:auto_generated.result[5]
result[6] <= mux_46c:auto_generated.result[6]
result[7] <= mux_46c:auto_generated.result[7]


|top|counter_mux:inst1|lpm_mux:LPM_MUX_component|mux_46c:auto_generated
data[0] => result_node[0].IN1
data[1] => result_node[1].IN1
data[2] => result_node[2].IN1
data[3] => result_node[3].IN1
data[4] => result_node[4].IN1
data[5] => result_node[5].IN1
data[6] => result_node[6].IN1
data[7] => result_node[7].IN1
data[8] => result_node[0].IN1
data[9] => result_node[1].IN1
data[10] => result_node[2].IN1
data[11] => result_node[3].IN1
data[12] => result_node[4].IN1
data[13] => result_node[5].IN1
data[14] => result_node[6].IN1
data[15] => result_node[7].IN1
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_node[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result_node[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= result_node[3].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= result_node[4].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= result_node[5].DB_MAX_OUTPUT_PORT_TYPE
result[6] <= result_node[6].DB_MAX_OUTPUT_PORT_TYPE
result[7] <= result_node[7].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => result_node[7].IN0
sel[0] => _.IN0
sel[0] => result_node[6].IN0
sel[0] => _.IN0
sel[0] => result_node[5].IN0
sel[0] => _.IN0
sel[0] => result_node[4].IN0
sel[0] => _.IN0
sel[0] => result_node[3].IN0
sel[0] => _.IN0
sel[0] => result_node[2].IN0
sel[0] => _.IN0
sel[0] => result_node[1].IN0
sel[0] => _.IN0
sel[0] => result_node[0].IN0
sel[0] => _.IN0


|top|simple_counter:inst2
clock => lpm_counter:LPM_COUNTER_component.clock
q[0] <= lpm_counter:LPM_COUNTER_component.q[0]
q[1] <= lpm_counter:LPM_COUNTER_component.q[1]
q[2] <= lpm_counter:LPM_COUNTER_component.q[2]
q[3] <= lpm_counter:LPM_COUNTER_component.q[3]
q[4] <= lpm_counter:LPM_COUNTER_component.q[4]
q[5] <= lpm_counter:LPM_COUNTER_component.q[5]
q[6] <= lpm_counter:LPM_COUNTER_component.q[6]
q[7] <= lpm_counter:LPM_COUNTER_component.q[7]
q[8] <= lpm_counter:LPM_COUNTER_component.q[8]
q[9] <= lpm_counter:LPM_COUNTER_component.q[9]
q[10] <= lpm_counter:LPM_COUNTER_component.q[10]
q[11] <= lpm_counter:LPM_COUNTER_component.q[11]
q[12] <= lpm_counter:LPM_COUNTER_component.q[12]
q[13] <= lpm_counter:LPM_COUNTER_component.q[13]
q[14] <= lpm_counter:LPM_COUNTER_component.q[14]
q[15] <= lpm_counter:LPM_COUNTER_component.q[15]
q[16] <= lpm_counter:LPM_COUNTER_component.q[16]
q[17] <= lpm_counter:LPM_COUNTER_component.q[17]
q[18] <= lpm_counter:LPM_COUNTER_component.q[18]
q[19] <= lpm_counter:LPM_COUNTER_component.q[19]
q[20] <= lpm_counter:LPM_COUNTER_component.q[20]
q[21] <= lpm_counter:LPM_COUNTER_component.q[21]
q[22] <= lpm_counter:LPM_COUNTER_component.q[22]
q[23] <= lpm_counter:LPM_COUNTER_component.q[23]
q[24] <= lpm_counter:LPM_COUNTER_component.q[24]
q[25] <= lpm_counter:LPM_COUNTER_component.q[25]
q[26] <= lpm_counter:LPM_COUNTER_component.q[26]
q[27] <= lpm_counter:LPM_COUNTER_component.q[27]
q[28] <= lpm_counter:LPM_COUNTER_component.q[28]
q[29] <= lpm_counter:LPM_COUNTER_component.q[29]
q[30] <= lpm_counter:LPM_COUNTER_component.q[30]
q[31] <= lpm_counter:LPM_COUNTER_component.q[31]


|top|simple_counter:inst2|lpm_counter:LPM_COUNTER_component
clock => cntr_h5h:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
data[8] => ~NO_FANOUT~
data[9] => ~NO_FANOUT~
data[10] => ~NO_FANOUT~
data[11] => ~NO_FANOUT~
data[12] => ~NO_FANOUT~
data[13] => ~NO_FANOUT~
data[14] => ~NO_FANOUT~
data[15] => ~NO_FANOUT~
data[16] => ~NO_FANOUT~
data[17] => ~NO_FANOUT~
data[18] => ~NO_FANOUT~
data[19] => ~NO_FANOUT~
data[20] => ~NO_FANOUT~
data[21] => ~NO_FANOUT~
data[22] => ~NO_FANOUT~
data[23] => ~NO_FANOUT~
data[24] => ~NO_FANOUT~
data[25] => ~NO_FANOUT~
data[26] => ~NO_FANOUT~
data[27] => ~NO_FANOUT~
data[28] => ~NO_FANOUT~
data[29] => ~NO_FANOUT~
data[30] => ~NO_FANOUT~
data[31] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_h5h:auto_generated.q[0]
q[1] <= cntr_h5h:auto_generated.q[1]
q[2] <= cntr_h5h:auto_generated.q[2]
q[3] <= cntr_h5h:auto_generated.q[3]
q[4] <= cntr_h5h:auto_generated.q[4]
q[5] <= cntr_h5h:auto_generated.q[5]
q[6] <= cntr_h5h:auto_generated.q[6]
q[7] <= cntr_h5h:auto_generated.q[7]
q[8] <= cntr_h5h:auto_generated.q[8]
q[9] <= cntr_h5h:auto_generated.q[9]
q[10] <= cntr_h5h:auto_generated.q[10]
q[11] <= cntr_h5h:auto_generated.q[11]
q[12] <= cntr_h5h:auto_generated.q[12]
q[13] <= cntr_h5h:auto_generated.q[13]
q[14] <= cntr_h5h:auto_generated.q[14]
q[15] <= cntr_h5h:auto_generated.q[15]
q[16] <= cntr_h5h:auto_generated.q[16]
q[17] <= cntr_h5h:auto_generated.q[17]
q[18] <= cntr_h5h:auto_generated.q[18]
q[19] <= cntr_h5h:auto_generated.q[19]
q[20] <= cntr_h5h:auto_generated.q[20]
q[21] <= cntr_h5h:auto_generated.q[21]
q[22] <= cntr_h5h:auto_generated.q[22]
q[23] <= cntr_h5h:auto_generated.q[23]
q[24] <= cntr_h5h:auto_generated.q[24]
q[25] <= cntr_h5h:auto_generated.q[25]
q[26] <= cntr_h5h:auto_generated.q[26]
q[27] <= cntr_h5h:auto_generated.q[27]
q[28] <= cntr_h5h:auto_generated.q[28]
q[29] <= cntr_h5h:auto_generated.q[29]
q[30] <= cntr_h5h:auto_generated.q[30]
q[31] <= cntr_h5h:auto_generated.q[31]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|top|simple_counter:inst2|lpm_counter:LPM_COUNTER_component|cntr_h5h:auto_generated
clock => counter_reg_bit[31].CLK
clock => counter_reg_bit[30].CLK
clock => counter_reg_bit[29].CLK
clock => counter_reg_bit[28].CLK
clock => counter_reg_bit[27].CLK
clock => counter_reg_bit[26].CLK
clock => counter_reg_bit[25].CLK
clock => counter_reg_bit[24].CLK
clock => counter_reg_bit[23].CLK
clock => counter_reg_bit[22].CLK
clock => counter_reg_bit[21].CLK
clock => counter_reg_bit[20].CLK
clock => counter_reg_bit[19].CLK
clock => counter_reg_bit[18].CLK
clock => counter_reg_bit[17].CLK
clock => counter_reg_bit[16].CLK
clock => counter_reg_bit[15].CLK
clock => counter_reg_bit[14].CLK
clock => counter_reg_bit[13].CLK
clock => counter_reg_bit[12].CLK
clock => counter_reg_bit[11].CLK
clock => counter_reg_bit[10].CLK
clock => counter_reg_bit[9].CLK
clock => counter_reg_bit[8].CLK
clock => counter_reg_bit[7].CLK
clock => counter_reg_bit[6].CLK
clock => counter_reg_bit[5].CLK
clock => counter_reg_bit[4].CLK
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter_reg_bit[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter_reg_bit[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= counter_reg_bit[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= counter_reg_bit[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= counter_reg_bit[7].DB_MAX_OUTPUT_PORT_TYPE
q[8] <= counter_reg_bit[8].DB_MAX_OUTPUT_PORT_TYPE
q[9] <= counter_reg_bit[9].DB_MAX_OUTPUT_PORT_TYPE
q[10] <= counter_reg_bit[10].DB_MAX_OUTPUT_PORT_TYPE
q[11] <= counter_reg_bit[11].DB_MAX_OUTPUT_PORT_TYPE
q[12] <= counter_reg_bit[12].DB_MAX_OUTPUT_PORT_TYPE
q[13] <= counter_reg_bit[13].DB_MAX_OUTPUT_PORT_TYPE
q[14] <= counter_reg_bit[14].DB_MAX_OUTPUT_PORT_TYPE
q[15] <= counter_reg_bit[15].DB_MAX_OUTPUT_PORT_TYPE
q[16] <= counter_reg_bit[16].DB_MAX_OUTPUT_PORT_TYPE
q[17] <= counter_reg_bit[17].DB_MAX_OUTPUT_PORT_TYPE
q[18] <= counter_reg_bit[18].DB_MAX_OUTPUT_PORT_TYPE
q[19] <= counter_reg_bit[19].DB_MAX_OUTPUT_PORT_TYPE
q[20] <= counter_reg_bit[20].DB_MAX_OUTPUT_PORT_TYPE
q[21] <= counter_reg_bit[21].DB_MAX_OUTPUT_PORT_TYPE
q[22] <= counter_reg_bit[22].DB_MAX_OUTPUT_PORT_TYPE
q[23] <= counter_reg_bit[23].DB_MAX_OUTPUT_PORT_TYPE
q[24] <= counter_reg_bit[24].DB_MAX_OUTPUT_PORT_TYPE
q[25] <= counter_reg_bit[25].DB_MAX_OUTPUT_PORT_TYPE
q[26] <= counter_reg_bit[26].DB_MAX_OUTPUT_PORT_TYPE
q[27] <= counter_reg_bit[27].DB_MAX_OUTPUT_PORT_TYPE
q[28] <= counter_reg_bit[28].DB_MAX_OUTPUT_PORT_TYPE
q[29] <= counter_reg_bit[29].DB_MAX_OUTPUT_PORT_TYPE
q[30] <= counter_reg_bit[30].DB_MAX_OUTPUT_PORT_TYPE
q[31] <= counter_reg_bit[31].DB_MAX_OUTPUT_PORT_TYPE


|top|PLL:inst
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]


|top|PLL:inst|altpll:altpll_component
inclk[0] => PLL_altpll:auto_generated.inclk[0]
inclk[1] => PLL_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|top|PLL:inst|altpll:altpll_component|PLL_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


